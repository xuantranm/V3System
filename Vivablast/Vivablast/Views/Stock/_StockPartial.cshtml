@using System.Globalization
@using Ap.Common.Constants
@using Vivablast.ViewModels
@model StockViewModel
@if (Model.TotalRecords == 0)
{
    <div>
        @Constants.NoData
    </div>
}
else
{
    <div>
        @Model.TotalRecords @Constants.DisplayResult
    </div>
    <div class="table-responsive">
        <table id="StockLst" class="table table-bordered table-hover">
            <thead>
                <tr class="vbhead">
                    <th class="center" style="width: 190px !important">Action</th>
                    <th class="center hidden-xs">No</th>
                    <th class="center">Stock Code</th>
                    <th class="center">Stock Name</th>
                    <th class="center hidden-xs">Acc. Code</th>
                    <th class="center">Stock Type</th>
                    <th class="center hidden-xs">Unit</th>
                    <th class="center hidden-xs">Category</th>
                    <th class="center hidden-xs">Ral No</th>
                    <th class="center hidden-xs">Color</th>
                    <th class="center hidden-xs">Weight</th>
                    @foreach (var store in Model.StoreVs)
                    {
                        var storeClass = "store" + store.Id;
                        <th class="center @storeClass">Quantity in @store.Name</th>
                    }
                    <th class="center hidden-xs">Created Date</th>
                    <th class="center hidden-xs">By</th>
                    <th class="center hidden-xs">Modified Date</th>
                    <th class="center hidden-xs">By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.StockVs)
                {
                <tr class="vbcolum">
                    <td class="center">
                        <!-- In future update security use R -->
                        <a href="@Url.Action("Manage", "Stock", new { id = @item.Id }, null)" class="btn btn-xs btn-primary" style="color: white; text-decoration:none;">
                            <span class="glyphicon glyphicon-edit"></span>
                            Qty
                        </a>
                        @if (Model.UserLogin.StockR > 2)
                            {
                            <a href="@Url.Action("Create", "Stock", new {id = @item.Id}, null)" class="btn btn-xs btn-primary" style="color: white; text-decoration: none;">
                                <span class="glyphicon glyphicon-edit"></span>
                                Edit
                            </a>
                            }
                        @if (Model.UserLogin.StockR > 3)
                            {
                            <a href="javascript:;" class="btn btn-xs btn-danger" style="color: white; text-decoration: none;">
                                <span class="glyphicon glyphicon-remove"></span>
                                Delete
                            </a>
                            }
                        <input type="hidden" class="ItemKey" value="@item.Id" />
                    </td>
                    <td class="center hidden-xs">@item.No</td>
                    <td class="center StockCode">@item.Stock_Code</td>
                    <td>@item.Stock_Name</td>
                    <td class="center hidden-xs">@item.Account_Code</td>
                    <td class="center">@item.Type</td>
                    <td class="center hidden-xs">@item.Unit</td>
                    <td class="center hidden-xs">@item.Category</td>
                    <td class="center hidden-xs">@item.RalNo</td>
                    <td class="center hidden-xs">@item.Color</td>
                    <td class="center hidden-xs">@item.Weight</td>
                    @{
                    if (!string.IsNullOrEmpty(item.Quantity))
                    {
                        var qtArr = item.Quantity.Trim().Split(';');
                        var stArr = item.Stores.Trim().Split(';');
                        foreach (var store in Model.StoreVs)
                        {
                            var storeClass = "store" + store.Id;
                            // Check if store not in stArr
                            var results = Array.FindAll(stArr, s => s.Equals(store.Id.ToString(CultureInfo.InvariantCulture)));
                            if (!results.Any())
                            {
                                <td class="center @storeClass">0</td>
                            }
                            else
                            {
                                var i = 0;
                                foreach (var st in stArr)
                                {
                                    if (store.Id == Convert.ToInt32(st))
                                    {
                                        <td class="center @storeClass">@qtArr[i]</td>
                                    }
                                    i++;
                                }
                            }
                        }
                    }
                    else
                    {
                        foreach (var store in Model.StoreVs)
                        {
                            var storeClass = "store" + store.Id;
                            <td class="center @storeClass">0</td>
                        }
                    }
}
                    <td class="center hidden-xs">@Constants.ConvertDate(item.Created_Date.ToString())</td>
                    <td class="center hidden-xs">@item.Created_By</td>
                    <td class="center hidden-xs">@Constants.ConvertDate(item.Modified_Date.ToString())</td>
                    <td class="center hidden-xs">
                        @item.Modified_By
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    if (Model.TotalPages > 1)
    {
        <div style="float: left;">
            @Html.Partial("Partials/_PreparePagingPartial")
        </div>
    }
}
