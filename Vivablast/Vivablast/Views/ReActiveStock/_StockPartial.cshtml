@using System.Globalization
@using Ap.Common.Constants
@model Ap.Business.ViewModels.XStockViewModel

@if (Model.TotalRecords == 0)
{
    <div>
        @Constants.NoData
    </div>
}
else
{
    if (Model.TotalPages > 1)
    {
    <div class="float-left margintop5">@Model.TotalRecords @Constants.DisplayResult</div>
    <div class="float-left marginleft10">
        @Html.Partial("Partials/_PreparePagingPartial")
    </div>
    }
    else
    {
    <div style="float: left;">@Model.TotalRecords @Constants.DisplayResult</div>
    }
    <div class="clearboth"></div>
    <div class="float-left">
        <table id="List" class="table table-bordered table-hover noresize" style="width: 2000px">
            <thead>
                <tr class="vbhead">
                    <th class="center" style="width: 190px!important">Action</th>
                    <th class="center hidden-xs">No</th>
                    <th class="center">Stock Code</th>
                    <th class="center">Stock Name</th>
                    <th class="center">Picture</th>
                    <th class="center hidden-xs">Acc. Code</th>
                    <th class="center">Stock Type</th>
                    <th class="center hidden-xs">Unit</th>
                    <th class="center hidden-xs">Category</th>
                    <th class="center hidden-xs">Ral No</th>
                    <th class="center hidden-xs">Color</th>
                    <th class="center hidden-xs">Weight</th>
                    @foreach (var store in Model.StoreVs)
                    {
                        <th class="center">Store: @store.Name</th>
                    }
                    <th class="center">Created Date</th>
                    <th class="center width90">By</th>
                    <th class="center">Modified Date</th>
                    <th class="center width90">By</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.StockVs)
                {
                    <tr class="vbcolum">
                        <td class="center">
                            @if (Model.UserLogin.StockR > 3)
                            {
                                <a href="javascript:;" class="btn btn-xs btn-danger btnReActive" style="color: white; text-decoration:none;">
                                    <span class="glyphicon glyphicon-remove"></span>
                                    Re-Active
                                </a>
                            }
                            <input type="hidden" class="ItemKey" value="@item.Id" />
                        </td>
                        <td class="center hidden-xs">@item.Id</td>
                        <td class="center StockCode">@item.vStockID</td>
                        <td>@item.vStockName</td>
                        <td><img class="img-responsive img-table-item" src="@item.FilePath@item.Files" /></td>
                        <td class="center hidden-xs">@item.vAccountCode</td>
                        <td class="center">@item.Type</td>
                        <td class="center hidden-xs">@item.Unit</td>
                        <td class="center hidden-xs">@item.Category</td>
                        <td class="center hidden-xs">@item.RalNo</td>
                        <td class="center hidden-xs">@item.ColorName</td>
                        <td class="center hidden-xs">@item.bWeight</td>
                        @{
                            if (!string.IsNullOrEmpty(item.Quantity))
                            {
                                var qtArr = item.Quantity.Trim().Split(';');
                                var stArr = item.Stores.Trim().Split(';');
                                foreach (var store in Model.StoreVs)
                                {
                                    // Check if store not in stArr
                                    var results = Array.FindAll(stArr, s => s.Equals(store.Id.ToString(CultureInfo.InvariantCulture)));
                                    if (!results.Any())
                                    {
                                        <td>0</td>
                                    }
                                    var i = 0;
                                    foreach (var st in stArr)
                                    {
                                        if (store.Id == Convert.ToInt32(st))
                                        {
                                            <td>@qtArr[i]</td>
                                        }
                                        i++;
                                    }
                                }

                            }
                            else
                            {
                                foreach (var store in Model.StoreVs)
                                {
                                    <td class="center">0</td>
                                }
                            }
                        }
                        <td class="center">@Constants.ConvertDate(item.dCreated.ToString())</td>
                        <td class="center">@item.Created_By</td>
                        <td class="center">@Constants.ConvertDate(item.dModified.ToString())</td>
                        <td class="center">
                            @item.Modified_By
                            <input type="hidden" class="ItemKey" value="@item.Id"/>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="clearboth"></div>
                if (Model.TotalPages > 1)
                {
    <div style="float: left;">
        @Html.Partial("Partials/_PreparePagingPartial")
    </div>
                }
}
